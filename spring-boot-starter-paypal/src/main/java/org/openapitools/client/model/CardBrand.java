/*
 * Payments
 * Call the Payments API to authorize payments, capture authorized payments, refund payments that have already been captured, and show payment information. Use the Payments API in conjunction with the <a href=\"/docs/api/orders/v2/\">Orders API</a>. For more information, see the <a href=\"/docs/checkout/\">PayPal Checkout Overview</a>.
 *
 * The version of the OpenAPI document: 2.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * The card network or brand. Applies to credit, debit, gift, and payment cards.
 */
public enum CardBrand {
  
  VISA("VISA"),
  
  MASTERCARD("MASTERCARD"),
  
  DISCOVER("DISCOVER"),
  
  AMEX("AMEX"),
  
  SOLO("SOLO"),
  
  JCB("JCB"),
  
  STAR("STAR"),
  
  DELTA("DELTA"),
  
  SWITCH("SWITCH"),
  
  MAESTRO("MAESTRO"),
  
  CB_NATIONALE("CB_NATIONALE"),
  
  CONFIGOGA("CONFIGOGA"),
  
  CONFIDIS("CONFIDIS"),
  
  ELECTRON("ELECTRON"),
  
  CETELEM("CETELEM"),
  
  CHINA_UNION_PAY("CHINA_UNION_PAY");

  private String value;

  CardBrand(String value) {
    this.value = value;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static CardBrand fromValue(String value) {
    for (CardBrand b : CardBrand.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    if (prefix == null) {
      prefix = "";
    }

    return String.format("%s=%s", prefix, this.toString());
  }
}

